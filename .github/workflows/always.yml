name: Verification
on:
  push:

env:
  NODE_VERSION: "16.X"

jobs:
  build:
    name: Build @ ubuntu
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: ls
        run: ls -la

      - name: setup node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: setup
        run: npm run setup:ci --if-present
      - name: npm install
        run: npm ci

      - name: lint
        run: npm run lint


  build-windows-amd64:
    name: Build @ windows:amd64
    runs-on: windows-latest
    env:
      OS: windows
      ARCH: amd64
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: ls
        run: ls

      - name: setup node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: setup
        run: npm run setup:ci --if-present
      - name: npm install
        run: npm ci

      - name: lint
        run: npm run lint

      # FIXME 'source' not available in windows
      # (not cygwin)
      # - name: terraform init @ ${{ env.OS }}:${{ env.ARCH }}
      #   run: |
      #     source scripts/terraform/setup.src.sh
      #     terraform validate
      #     terraform init


  build-macOS-amd64:
    name: Build @ macOS:amd64
    runs-on: macos-latest
    env:
      OS: darwin
      ARCH: amd64
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: ls
        run: ls -la

      - name: setup node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: setup
        run: npm run setup:ci --if-present
      - name: npm install
        run: npm ci

      - name: lint
        run: npm run lint

      - name: terraform init @ ${{ env.OS }}:${{ env.ARCH }}
        run: |
          source scripts/terraform/setup.src.sh
          terraform validate
          terraform init
